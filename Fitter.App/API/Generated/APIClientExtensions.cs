// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Fitter.App.API
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for APIClient.
    /// </summary>
    public static partial class APIClientExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='comment'>
            /// </param>
            public static void CreateComment(this IAPIClient operations, CommentModelInner comment = default(CommentModelInner))
            {
                operations.CreateCommentAsync(comment).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='comment'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateCommentAsync(this IAPIClient operations, CommentModelInner comment = default(CommentModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreateCommentWithHttpMessagesAsync(comment, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='comment'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CreateCommentWithHttpMessages(this IAPIClient operations, CommentModelInner comment = default(CommentModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreateCommentWithHttpMessagesAsync(comment, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeleteComment(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                operations.DeleteCommentAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteCommentAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteCommentWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeleteCommentWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeleteCommentWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void CommentTagUsers(this IAPIClient operations, IList<UserDetailModelInner> users = default(IList<UserDetailModelInner>), System.Guid? id = default(System.Guid?))
            {
                operations.CommentTagUsersAsync(users, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CommentTagUsersAsync(this IAPIClient operations, IList<UserDetailModelInner> users = default(IList<UserDetailModelInner>), System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CommentTagUsersWithHttpMessagesAsync(users, id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CommentTagUsersWithHttpMessages(this IAPIClient operations, IList<UserDetailModelInner> users = default(IList<UserDetailModelInner>), System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CommentTagUsersWithHttpMessagesAsync(users, id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<CommentModelInner> GetCommentsForPost(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetCommentsForPostAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<CommentModelInner>> GetCommentsForPostAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCommentsForPostWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<CommentModelInner>> GetCommentsForPostWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetCommentsForPostWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<UserListModelInner> GetTagsForComment(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetTagsForCommentAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserListModelInner>> GetTagsForCommentAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTagsForCommentWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<UserListModelInner>> GetTagsForCommentWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetTagsForCommentWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='post'>
            /// </param>
            public static void CreatePost(this IAPIClient operations, PostModelInner post = default(PostModelInner))
            {
                operations.CreatePostAsync(post).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='post'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreatePostAsync(this IAPIClient operations, PostModelInner post = default(PostModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreatePostWithHttpMessagesAsync(post, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='post'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CreatePostWithHttpMessages(this IAPIClient operations, PostModelInner post = default(PostModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreatePostWithHttpMessagesAsync(post, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeletePost(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                operations.DeletePostAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeletePostAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeletePostWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeletePostWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeletePostWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='attachments'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void PostAddAttachments(this IAPIClient operations, IList<AttachmentModelInner> attachments = default(IList<AttachmentModelInner>), System.Guid? id = default(System.Guid?))
            {
                operations.PostAddAttachmentsAsync(attachments, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='attachments'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task PostAddAttachmentsAsync(this IAPIClient operations, IList<AttachmentModelInner> attachments = default(IList<AttachmentModelInner>), System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.PostAddAttachmentsWithHttpMessagesAsync(attachments, id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='attachments'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse PostAddAttachmentsWithHttpMessages(this IAPIClient operations, IList<AttachmentModelInner> attachments = default(IList<AttachmentModelInner>), System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.PostAddAttachmentsWithHttpMessagesAsync(attachments, id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void PostTagUsers(this IAPIClient operations, IList<UserDetailModelInner> users = default(IList<UserDetailModelInner>), System.Guid? id = default(System.Guid?))
            {
                operations.PostTagUsersAsync(users, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task PostTagUsersAsync(this IAPIClient operations, IList<UserDetailModelInner> users = default(IList<UserDetailModelInner>), System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.PostTagUsersWithHttpMessagesAsync(users, id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse PostTagUsersWithHttpMessages(this IAPIClient operations, IList<UserDetailModelInner> users = default(IList<UserDetailModelInner>), System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.PostTagUsersWithHttpMessagesAsync(users, id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<PostModelInner> GetPostsForTeam(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetPostsForTeamAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<PostModelInner>> GetPostsForTeamAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetPostsForTeamWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<PostModelInner>> GetPostsForTeamWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetPostsForTeamWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<AttachmentModelInner> GetAttachmentsForPost(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetAttachmentsForPostAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<AttachmentModelInner>> GetAttachmentsForPostAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAttachmentsForPostWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<AttachmentModelInner>> GetAttachmentsForPostWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetAttachmentsForPostWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<UserListModelInner> GetTagsForPost(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetTagsForPostAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserListModelInner>> GetTagsForPostAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTagsForPostWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<UserListModelInner>> GetTagsForPostWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetTagsForPostWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='team'>
            /// </param>
            public static TeamDetailModelInner CreateTeam(this IAPIClient operations, TeamDetailModelInner team = default(TeamDetailModelInner))
            {
                return operations.CreateTeamAsync(team).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='team'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TeamDetailModelInner> CreateTeamAsync(this IAPIClient operations, TeamDetailModelInner team = default(TeamDetailModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateTeamWithHttpMessagesAsync(team, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='team'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<TeamDetailModelInner> CreateTeamWithHttpMessages(this IAPIClient operations, TeamDetailModelInner team = default(TeamDetailModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreateTeamWithHttpMessagesAsync(team, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static TeamDetailModelInner GetTeamById(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetTeamByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TeamDetailModelInner> GetTeamByIdAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTeamByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<TeamDetailModelInner> GetTeamByIdWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetTeamByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void AddUserToTeam(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), System.Guid? id = default(System.Guid?))
            {
                operations.AddUserToTeamAsync(user, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task AddUserToTeamAsync(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.AddUserToTeamWithHttpMessagesAsync(user, id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse AddUserToTeamWithHttpMessages(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.AddUserToTeamWithHttpMessagesAsync(user, id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void RemoveUserFromTeam(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), System.Guid? id = default(System.Guid?))
            {
                operations.RemoveUserFromTeamAsync(user, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task RemoveUserFromTeamAsync(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.RemoveUserFromTeamWithHttpMessagesAsync(user, id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse RemoveUserFromTeamWithHttpMessages(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.RemoveUserFromTeamWithHttpMessagesAsync(user, id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<TeamListModelInner> GetTeamsForUser(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.GetTeamsForUserAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TeamListModelInner>> GetTeamsForUserAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTeamsForUserWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<TeamListModelInner>> GetTeamsForUserWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetTeamsForUserWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            public static bool? TeamExists(this IAPIClient operations, string name = default(string))
            {
                return operations.TeamExistsAsync(name).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<bool?> TeamExistsAsync(this IAPIClient operations, string name = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TeamExistsWithHttpMessagesAsync(name, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<bool?> TeamExistsWithHttpMessages(this IAPIClient operations, string name = default(string), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.TeamExistsWithHttpMessagesAsync(name, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeleteTeam(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                operations.DeleteTeamAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteTeamAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteTeamWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeleteTeamWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeleteTeamWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            public static UserDetailModelInner UserCreate(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner))
            {
                return operations.UserCreateAsync(user).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserDetailModelInner> UserCreateAsync(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UserCreateWithHttpMessagesAsync(user, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserDetailModelInner> UserCreateWithHttpMessages(this IAPIClient operations, UserDetailModelInner user = default(UserDetailModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UserCreateWithHttpMessagesAsync(user, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static UserDetailModelInner UserGetById(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.UserGetByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserDetailModelInner> UserGetByIdAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UserGetByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserDetailModelInner> UserGetByIdWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UserGetByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            public static UserDetailModelInner UserGetByEmail(this IAPIClient operations, string email = default(string))
            {
                return operations.UserGetByEmailAsync(email).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserDetailModelInner> UserGetByEmailAsync(this IAPIClient operations, string email = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UserGetByEmailWithHttpMessagesAsync(email, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserDetailModelInner> UserGetByEmailWithHttpMessages(this IAPIClient operations, string email = default(string), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UserGetByEmailWithHttpMessagesAsync(email, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<UserListModelInner> UsersInTeam(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.UsersInTeamAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserListModelInner>> UsersInTeamAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UsersInTeamWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<UserListModelInner>> UsersInTeamWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UsersInTeamWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<UserListModelInner> UsersNotInTeam(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.UsersNotInTeamAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserListModelInner>> UsersNotInTeamAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UsersNotInTeamWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<UserListModelInner>> UsersNotInTeamWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UsersNotInTeamWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

    }
}
